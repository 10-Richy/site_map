{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4b0f90fd",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "접속성공\n",
      "\n",
      "종료하고 싶으면 '종료'를 입력하세요\n",
      "지역선택 후 지도를 저장하시려면 '저장하기'를 입력하세요.\n"
     ]
    }
   ],
   "source": [
    "import requests, ssl, json, folium, csv \n",
    "from bs4 import BeautifulSoup \n",
    "from urllib.request import urlopen \n",
    "from pyproj import Proj, transform \n",
    "import pandas as pd\n",
    "\n",
    "ssl._create_default_https_context = ssl._create_unverified_context \n",
    "url = 'https://www.safemap.go.kr/com/cmm/getMapLayerList.json'  \n",
    "\n",
    "cnt = 0 \n",
    "extralist = [] \n",
    "marker_list=[]\n",
    "\n",
    "params = { \n",
    "    \"top\": 4982546.747533919,\n",
    "   \"bottom\": 3797467.0610005492,\n",
    "   \"left\": 13217002.173582455,\n",
    "   \"right\": 15565147.68250307,\n",
    "   \"layer\": \"VIEW_CNTWRKSTTUS\",\n",
    "   \"style\": \"A2SM_CntwrkSttus\",\n",
    "   \"currentPage\": 2,\n",
    "   \"perPage\": 9999999,\n",
    "}\n",
    "\n",
    "header = { \n",
    "    'user-agent' : 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36',\n",
    "    'referer' : 'https://www.safemap.go.kr/main/smap.do?flag=2'\n",
    "}\n",
    "\n",
    "response = requests.post(url, headers=header, params=params) \n",
    "if response.status_code == requests.codes.ok: \n",
    "    print('접속성공') \n",
    "\n",
    "    \n",
    "json_datas = json.loads(response.text)\n",
    "\n",
    "\n",
    "for json_data in json_datas[\"layerList\"]: \n",
    "    if json_data['ADRES'] and '서울특별시' in json_data['ADRES']: \n",
    "        extralist.append(json_data['ADRES']) \n",
    "        cnt += 1 \n",
    "        \n",
    "df = pd.DataFrame(extralist, columns = ['<--서울특별시 공사현황 주소-->'])\n",
    "df.to_csv(\"서울특별시 공사현황 주소.csv\", index = False)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "while True:\n",
    "    choice_addr_list=[]\n",
    "    searchcnt = 0 \n",
    "    print('\\n종료하고 싶으면 \\'종료\\'를 입력하세요') \n",
    "    print('지역선택 후 지도를 저장하시려면 \\'저장하기\\'를 입력하세요.')\n",
    "    wantaddress = input('주소 입력(ex.강남구) : ') \n",
    "    \n",
    "    if wantaddress == '종료': \n",
    "        exit() \n",
    "        \n",
    "    elif wantaddress == '저장하기':\n",
    "        for i in range(0,len(marker_list),3):\n",
    "            folium.Marker([marker_list[i], marker_list[i+1]], popup=marker_list[i+2]).add_to(m)\n",
    "        m.save('C:\\py_temp/Richy/공사현황지도.html')\n",
    "        exittemp=input('엔터를 누르면 종료합니다.')\n",
    "        exit()\n",
    "###검색기능###       \n",
    "    else: \n",
    "        for extra in extralist:  \n",
    "            if wantaddress in extra: \n",
    "                choice_addr_list.append(extra)\n",
    "                searchcnt+=1 \n",
    "                print(str(searchcnt)+\". \"+extra)\n",
    "                \n",
    "        print('\\n검색된 지역 갯수 :',searchcnt) # 검색갯수 출력\n",
    "        \n",
    "        if searchcnt == 0:\n",
    "            print('다른 지역을 검색해 주세요.')\n",
    "        else:\n",
    "            choice_addr = int(input(\"웹사이트에 지도를 추가할 지역의 번호를 입력하세요 : \"))\n",
    "            #print(choice_addr)#check\n",
    "            toadd_addr = choice_addr_list[choice_addr-1]\n",
    "            print(\"선택한 지역 => \"+toadd_addr)\n",
    "\n",
    "###'서울특별시'만 들어간 데이터 추출###\n",
    "            for json_data in json_datas[\"layerList\"]: \n",
    "                if json_data['ADRES'] and '서울특별시' in json_data['ADRES']: \n",
    "                    if json_data['ADRES'] == toadd_addr:\n",
    "                        choice_x = json_data['X']\n",
    "                        choice_y = json_data['Y']\n",
    "                        #print(json_data)#check\n",
    "                        #print(choice_x)\n",
    "                        #print(choice_y)\n",
    "\n",
    "                        epsg3857 = Proj(init=\"epsg:3857\")\n",
    "                        wgs84 = Proj(init='epsg:4326')\n",
    "###지도###\n",
    "                        x1, y1 = transform(epsg3857, wgs84, choice_x, choice_y)\n",
    "                        #print('변경 후: ', x1, y1)\n",
    "                        m = folium.Map(location = [37.5642135, 127.0016985],zoom_start = 12)\n",
    "                        marker_list.append(y1)\n",
    "                        marker_list.append(x1)\n",
    "                        marker_list.append(toadd_addr)\n",
    "                        #folium.Marker([y1, x1]).add_to(m)\n",
    "            print(\"\\n추가되었습니다.\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
